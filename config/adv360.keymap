
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
   &kp ESC    &kp N1     &kp N2    &kp N3     &kp N4  &kp N5                   &tog 1                                                                        &mo 3  &kp N6  &kp N7     &kp N8    &kp N9    &kp N0      &kp MINUS
   &kp TAB     &kp Q      &kp W     &kp E      &kp R   &kp T            &macro_upload                                                                     &kp BSLH   &kp Y   &kp U      &kp I     &kp O     &kp P  &kp BACKSPACE
 &kp LCTRL     &kp A      &kp S     &kp D      &kp F   &kp G            &kp LC(SPACE)  &kp MINUS  &kp EQUAL                  &kp LEFT  &kp RIGHT  &kp SINGLE_QUOTE   &kp H   &kp J      &kp K     &kp L  &kp SEMI      &kp ENTER
 &kp LSHFT     &kp Z      &kp X     &kp C      &kp V   &kp B                                        &kp INS                    &kp UP                                &kp N   &kp M  &kp COMMA   &kp DOT  &kp FSLH      &kp RSHFT
  &kp LWIN  &kp LALT  &kp GRAVE  &kp LEFT  &kp RIGHT                            &mo 2   &kp BSPC    &kp DEL                  &kp DOWN  &kp SPACE             &mo 2          &kp UP   &kp DOWN  &kp LBKT  &kp RBKT  &kp RA(GRAVE)
            >;
        };

        layer_keypad {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS     &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS     &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER     &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans              &kp UP      &kp DOWN     &kp KP_DOT           &trans     &trans
            >;
        };

        layer_fn {
            bindings = <
 &kp GRAVE     &kp F1     &kp F2     &kp F3     &kp F4  &kp F5            &tog 1                                                     &mo 3     &kp F6    &kp F7    &kp F8     &kp F9  &kp F10  &kp F11
    &trans     &trans     &trans     &trans  &kp LC(R)  &trans             &none                                                     &none  &kp LC(Y)  &kp HOME    &kp UP    &kp END   &trans  &kp F12
    &trans  &kp LC(A)  &kp LC(S)  &kp LC(D)  &kp LC(F)  &trans             &none  &trans    &trans                  &trans  &trans   &none  &kp PG_UP  &kp LEFT  &kp DOWN  &kp RIGHT   &trans   &trans
    &trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans                            &kp CAPS                  &trans                  &kp PG_DN  &kp HOME    &kp UP    &kp END   &trans   &trans
    &trans     &trans     &trans     &trans     &trans                    &trans  &trans    &trans                  &trans  &trans  &trans             &kp LEFT  &kp DOWN  &kp RIGHT   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none    &macro_ver         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_Layer__4 {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
